
@{
    ViewBag.Title = "RPMiembro";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <h2 class="text-black border-bottom border-info shadow-lg mt-05">REPORTE DE MIEMBROS</h2>
}

<main class="maincl">
    <div class="principal1 shadow-lg">
        <div class="card">
            <div>
                <div class="container d-flex mt-2 mb-2">
                    <div class="input-group  mr-2">
                        <span class="input-group-text" id="basic-addon1">Fecha Bautismo</span>
                        <input type="date" class="form-control pr-2" id="Desde" aria-label="Nombre de usuario" aria-describedby="basic-addon1" required>
                    </div>
                   
                    <div class="input-group">
                        <span class="input-group-text" id="basic-addon1"></span>
                        <input type="date" class="form-control metrica" id="Hasta" aria-label="Nombre de Miembro" aria-describedby="basic-addon1" required>
                    </div>
                
                    <select id="tipo" class="form-select h-auto" aria-label="Default select example">
                        <option value="F" selected>Selecciona el sexo</option>
                        <option value="F">Femenino</option>
                        <option value="M">Masculino</option>
                    </select>
                </div>
                <div class="container">

                    <div class="input-group mb-3">
                        <span class="input-group-text" id="basic-addon1">Asistente</span>
                        <input type="text" class="form-control " id="user" placeholder="Nombre de Asistente" aria-label="Nombre de usuario" aria-describedby="basic-addon1" required>
                        <span class="input-group-text" id="basic-addon1">Edad</span>
                        <input type="number" class="form-control " id="edad" placeholder="edad" aria-label="Nombre de usuario" aria-describedby="basic-addon1" required>
                        <select id="tiporol" class="form-select h-auto" aria-label="Default select example">                         
                            <option value="1" selected >Miembro</option>
                            <option value="2">Lider</option>
                            <option value="3">Diacono</option>
                        </select>
                        <button type="button" onclick="buscar()" class="btn btn-success mr-1">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                            </svg>
                            Buscar
                        </button>
                    </div>

                </div>
            </div>

        </div>


        <div id="Reportrecicler" class="contenedor_P bg-light" style="text-align:center; display:none;">
            <button type="button" onclick="dowloaddata()" class="btn btn-success mr-1 mb-2">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filetype-xls" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M14 4.5V14a2 2 0 0 1-2 2h-1v-1h1a1 1 0 0 0 1-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5L14 4.5ZM6.472 15.29a1.176 1.176 0 0 1-.111-.449h.765a.578.578 0 0 0 .254.384c.07.049.154.087.25.114.095.028.202.041.319.041.164 0 .302-.023.413-.07a.559.559 0 0 0 .255-.193.507.507 0 0 0 .085-.29.387.387 0 0 0-.153-.326c-.101-.08-.255-.144-.462-.193l-.619-.143a1.72 1.72 0 0 1-.539-.214 1.001 1.001 0 0 1-.351-.367 1.068 1.068 0 0 1-.123-.524c0-.244.063-.457.19-.639.127-.181.303-.322.527-.422.225-.1.484-.149.777-.149.305 0 .564.05.78.152.216.102.383.239.5.41.12.17.186.359.2.566h-.75a.56.56 0 0 0-.12-.258.625.625 0 0 0-.247-.181.923.923 0 0 0-.369-.068c-.217 0-.388.05-.513.152a.472.472 0 0 0-.184.384c0 .121.048.22.143.3a.97.97 0 0 0 .405.175l.62.143c.217.05.406.12.566.211a1 1 0 0 1 .375.358c.09.148.135.335.135.56 0 .247-.063.466-.188.656a1.216 1.216 0 0 1-.539.439c-.234.105-.52.158-.858.158-.254 0-.476-.03-.665-.09a1.404 1.404 0 0 1-.478-.252 1.13 1.13 0 0 1-.29-.375Zm-2.945-3.358h-.893L1.81 13.37h-.036l-.832-1.438h-.93l1.227 1.983L0 15.931h.861l.853-1.415h.035l.85 1.415h.908L2.253 13.94l1.274-2.007Zm2.727 3.325H4.557v-3.325h-.79v4h2.487v-.675Z" />
                </svg>
                Descargar
            </button>

            <div class="modificate-report">
                <div id="hot"></div>
            </div>
        </div>
    </div>

</main>

<script>
    function buscar() {

        var sr = document.getElementById("Reportrecicler");
        sr.style.display = "";
        var url2 = "@Url.Action("ReMiembro", "Event")";
        var FI = $("#Desde").val()
        var FF = $("#Hasta").val()
        var selectElement = document.getElementById("tiporol");
        var selectedValue = selectElement.value;
        if (FF == "" || FI == "") {
            alert("Campos de fecha no pueden estar vacios")
        } else {
            data = {
                FI,
                FF,
                USER: $("#user").val(),
                edad: $("#edad").val(),
                sexo: $("#tipo").val(),
                rol : selectedValue
            }
          
            $.post(url2, data).done(function (data) {
                Mostrarxls(data.data)            
            });
        }
    }

    function dowloaddata() {
        var sr = document.getElementById("Reportrecicler");
        sr.style.display = "";
        var url2 = "@Url.Action("ReMiembro", "Event")";
        var FI = $("#Desde").val()
        var FF = $("#Hasta").val()

        if (FF == "" || FI == "") {
            alert("Campos de fecha no pueden estar vacios")
        } else {
            data = {
                FI,
                FF,
                USER: $("#user").val(),
                edad: $("#edad").val(),
                sexo: $("#tipo").val(),
            }
      
            $.post(url2, data).done(function (data) {
                generarXLS(FI, FF, data.data)
            });
        }
    }

    function Mostrarxls(data){
        // Configuración de Handsontable
        var container = document.getElementById('hot');
        var hot = new Handsontable(container, {
            licenseKey: 'non-commercial-and-evaluation',
            data: data,
            colHeaders: ['ID', 'usuario', 'Nombre_Completo', 'restablecer', 'Edad', 'Direccion', 'Nro_contacto', 'Email', 'Fecha_bautismo','Fecha_ingreso'],
            columns: [
                { data: 'Id_Usuario' },
                { data: 'usuario' },
                { data: 'Nombre_Completo' },
                { data: 'restablecer' },
                { data: 'Edad' },
                { data: 'Direccion' },
                { data: 'Nro_contacto' },
                { data: 'Email' },
                { data: 'Fecha_bautismo' },
                { data: 'Fecha_ingreso' },
            ]
        });
    }

    function generarXLS(desde, hasta, data) {
        // Crear un nuevo libro de trabajo
        const workbook = new ExcelJS.Workbook();
        // Crear una nueva hoja de cálculo
        const worksheet = workbook.addWorksheet('Datos');



        // Fusionar celdas y establecer el texto 'desde' en A2:C2
        const desdeCell = worksheet.getCell('A2');
        desdeCell.value = 'desde ' + desde;
        worksheet.mergeCells('A2:E2');

        // Fusionar celdas y establecer el texto 'hasta' en D2:F2
        const hastaCell = worksheet.getCell('F2');
        hastaCell.value = 'hasta ' + hasta;
        worksheet.mergeCells('F2:J2');

        // Fusionar celdas y establecer el texto 'REPORTE GENERAL DE ASISTENCIAS' en A3:F3
        const reportCell = worksheet.getCell('A3');
        reportCell.value = 'REPORTE GENERAL DE MIEMBROS';
        reportCell.alignment = { horizontal: 'center' };
        reportCell.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FF0000FF' } // Fondo azul
        };
        worksheet.mergeCells('A3:J3');

        const reportCell1 = worksheet.getCell('A4');
        reportCell1.value1 = '';
        reportCell1.alignment = { horizontal: 'center' };


        // Configurar los encabezados de columna
        worksheet.columns = [
            { header: 'ID', key: 'Id_Usuario' },
            { header: 'USUARIO', key: 'usuario' },
            { header: 'NOMBRE', key: 'Nombre_Completo' },
            { header: 'RESTABLECER', key: 'restablecer' },
            { header: 'EDAD', key: 'Edad' },
            { header: 'DIRECCION', key: 'Direccion' },
            { header: 'CONTACTO', key: 'Nro_contacto' },
            { header: 'EMAIL', key: 'Email' },
            { header: 'BAUTISMO', key: 'Fecha_bautismo' },
            { header: 'INGRESO', key: 'Fecha_ingreso' },
        ];

        // Aplicar estilos a los encabezados de columna
        const headerRow = worksheet.getRow(1);
        headerRow.eachCell((cell) => {
            cell.font = { color: { argb: '000000' } }; // Color de fuente negro (hexadecimal)
            cell.fill = {
                type: 'pattern',
                pattern: 'solid',
                fgColor: { argb: 'FF006400' } // Color de fondo verde oscuro (hexadecimal)
            };
        });

        // Agregar los datos a la hoja de cálculo
        // Agregar los datos a la hoja de cálculo
        data.forEach((row, index) => {
            const newRow = worksheet.addRow(row);
            newRow.eachCell((cell) => {
                cell.border = {
                    top: { style: 'thin' },
                    left: { style: 'thin' },
                    bottom: { style: 'thin' },
                    right: { style: 'thin' },
                };
            });

            // Verificar si es la primera fila de datos (después de los encabezados)
            if (index === 0) {
                // Obtener la última celda de la fila
                const lastCell = newRow.getCell(worksheet.columns.length);
                // Fusionar las celdas desde A4 hasta la última celda de la fila
                worksheet.mergeCells(`A4:${lastCell.address}`);
            }
        });

        // Fusionar celdas y establecer el texto 'ASISTENCIAS IBH' en A1:F1
        const titleCell = worksheet.getCell('A1');
        titleCell.value = 'MIEMBROS IBH';
        titleCell.alignment = { horizontal: 'center' };
        titleCell.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FF0000FF' } // Fondo azul
        };
        worksheet.mergeCells('A1:J1');
        // Generar el archivo de Excel
        workbook.xlsx.writeBuffer().then((buffer) => {
            // Descargar el archivo
            const blob = new Blob([buffer], { type: 'application/octet-stream' });
            const url = URL.createObjectURL(blob);
            const link = document.createElement('a');
            link.href = url;
            link.download = 'MIEMBROS.xlsx';
            link.click();
            URL.revokeObjectURL(url);
        });
    }

</script>

